{
  "version": 3,
  "sources": ["https://deno.land/x/silverbullet@0.10.1/lib/plugos/worker_runtime.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/editor.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscall.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/system.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/clientStore.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/asset.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/lib/crypto.ts", "https://jsr.io/@std/encoding/1.0.6/_validate_binary_like.ts", "https://jsr.io/@std/encoding/1.0.6/base32.ts", "https://jsr.io/@std/encoding/1.0.6/base58.ts", "https://jsr.io/@std/encoding/1.0.6/base64.ts", "https://jsr.io/@std/encoding/1.0.6/hex.ts", "https://jsr.io/@std/encoding/1.0.6/varint.ts", "preview.ts", "mindmap.ts", "../../../../tmp/ce36c6ddd1725209.js"],
  "sourcesContent": ["// This is the runtime imported from the compiled plug worker code\nimport type { ControllerMessage, WorkerMessage } from \"./protocol.ts\";\nimport type { ProxyFetchRequest, ProxyFetchResponse } from \"../proxy_fetch.ts\";\n\ndeclare global {\n  function syscall(name: string, ...args: any[]): Promise<any>;\n}\n\nlet workerPostMessage = (_msg: ControllerMessage): void => {\n  throw new Error(\"Not initialized yet\");\n};\n\n// Are we running in a (web) worker?\n\n// Determines if we're running in a web worker environment (Deno or browser)\n// - in a browser's main threads, typeof window is \"object\"\n// - in a browser's worker threads, typeof window === \"undefined\"\n// - in Deno's main thread typeof window === \"object\"\n// - in Deno's workers typeof window === \"undefined\n// - in Cloudflare workers typeof window === \"undefined\", but typeof globalThis.WebSocketPair is defined\nconst runningAsWebWorker = typeof window === \"undefined\" &&\n  // @ts-ignore: globalThis\n  typeof globalThis.WebSocketPair === \"undefined\";\n\nif (typeof Deno === \"undefined\") {\n  // @ts-ignore: Deno hack\n  self.Deno = {\n    args: [],\n    // @ts-ignore: Deno hack\n    build: {\n      arch: \"x86_64\",\n    },\n    env: {\n      // @ts-ignore: Deno hack\n      get() {\n      },\n    },\n  };\n}\n\nconst pendingRequests = new Map<\n  number,\n  {\n    resolve: (result: unknown) => void;\n    reject: (e: any) => void;\n  }\n>();\n\nlet syscallReqId = 0;\n\nif (runningAsWebWorker) {\n  globalThis.syscall = async (name: string, ...args: any[]) => {\n    return await new Promise((resolve, reject) => {\n      syscallReqId++;\n      pendingRequests.set(syscallReqId, { resolve, reject });\n      workerPostMessage({\n        type: \"sys\",\n        id: syscallReqId,\n        name,\n        args,\n      });\n    });\n  };\n}\n\nexport function setupMessageListener(\n  // deno-lint-ignore ban-types\n  functionMapping: Record<string, Function>,\n  manifest: any,\n  postMessageFn: (msg: ControllerMessage) => void,\n) {\n  if (!runningAsWebWorker) {\n    // Don't do any of this stuff if this is not a web worker\n    // This caters to the NoSandbox run mode\n    return;\n  }\n  workerPostMessage = postMessageFn;\n  self.addEventListener(\"message\", (event: { data: WorkerMessage }) => {\n    (async () => {\n      const data = event.data;\n      switch (data.type) {\n        case \"inv\":\n          {\n            const fn = functionMapping[data.name!];\n            if (!fn) {\n              throw new Error(`Function not loaded: ${data.name}`);\n            }\n            try {\n              const result = await Promise.resolve(fn(...(data.args || [])));\n              workerPostMessage({\n                type: \"invr\",\n                id: data.id,\n                result: result,\n              } as ControllerMessage);\n            } catch (e: any) {\n              console.error(\n                \"An exception was thrown as a result of invoking function\",\n                data.name,\n                \"error:\",\n                e.message,\n              );\n              workerPostMessage({\n                type: \"invr\",\n                id: data.id!,\n                error: e.message,\n              });\n            }\n          }\n          break;\n        case \"sysr\":\n          {\n            const syscallId = data.id;\n            const lookup = pendingRequests.get(syscallId);\n            if (!lookup) {\n              throw Error(\"Invalid request id\");\n            }\n            pendingRequests.delete(syscallId);\n            if (data.error) {\n              lookup.reject(new Error(data.error));\n            } else {\n              lookup.resolve(data.result);\n            }\n          }\n\n          break;\n      }\n    })().catch(console.error);\n  });\n  // Signal initialization with manifest\n  workerPostMessage({\n    type: \"manifest\",\n    manifest,\n  });\n}\n\nexport function base64Decode(s: string): Uint8Array {\n  const binString = atob(s);\n  const len = binString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function base64Encode(buffer: Uint8Array | string): string {\n  if (typeof buffer === \"string\") {\n    buffer = new TextEncoder().encode(buffer);\n  }\n  let binary = \"\";\n  const len = buffer.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(buffer[i]);\n  }\n  return btoa(binary);\n}\n\nexport async function sandboxFetch(\n  reqInfo: RequestInfo,\n  options?: ProxyFetchRequest,\n): Promise<ProxyFetchResponse> {\n  if (typeof reqInfo !== \"string\") {\n    const body = new Uint8Array(await reqInfo.arrayBuffer());\n    const encodedBody = body.length > 0 ? base64Encode(body) : undefined;\n    options = {\n      method: reqInfo.method,\n      headers: Object.fromEntries(reqInfo.headers.entries()),\n      base64Body: encodedBody,\n    };\n    reqInfo = reqInfo.url;\n  }\n  return syscall(\"sandboxFetch.fetch\", reqInfo, options);\n}\n\n// @ts-ignore: monkey patching fetch\nglobalThis.nativeFetch = globalThis.fetch;\n// Monkey patch fetch()\nexport function monkeyPatchFetch() {\n  // @ts-ignore: monkey patching fetch\n  globalThis.fetch = async function (\n    reqInfo: RequestInfo,\n    init?: RequestInit,\n  ): Promise<Response> {\n    const encodedBody = init && init.body\n      ? base64Encode(\n        new Uint8Array(await (new Response(init.body)).arrayBuffer()),\n      )\n      : undefined;\n    const r = await sandboxFetch(\n      reqInfo,\n      init && {\n        method: init.method,\n        headers: init.headers as Record<string, string>,\n        base64Body: encodedBody,\n      },\n    );\n    return new Response(r.base64Body ? base64Decode(r.base64Body) : null, {\n      status: r.status,\n      headers: r.headers,\n    });\n  };\n}\n\nif (runningAsWebWorker) {\n  monkeyPatchFetch();\n}\n\n// denoCacheMetadata={\"headers\":{\"access-control-allow-origin\":\"*\",\"content-type\":\"application/typescript; charset=utf-8\",\"date\":\"Sat, 16 Nov 2024 22:33:12 GMT\",\"via\":\"http/2 edgeproxy-h\",\"x-frame-options\":\"DENY\",\"accept-ranges\":\"bytes\",\"cross-origin-embedder-policy\":\"same-origin\",\"content-security-policy\":\"default-src 'none'; style-src 'unsafe-inline'; sandbox\",\"cross-origin-opener-policy\":\"same-origin\",\"cross-origin-resource-policy\":\"same-origin\",\"etag\":\"\\\"099b2158cf5c7fb72c6cc3321a51fdae\\\"\",\"server\":\"deno/gcp-europe-west2\",\"content-length\":\"5705\",\"age\":\"1781395\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:01 GMT\",\"server-timing\":\"fetchSource;dur=4\",\"strict-transport-security\":\"max-age=63072000; includeSubDomains; preload\",\"vary\":\"Accept-Encoding, Origin\",\"x-amz-cf-id\":\"wrxkV39OfrmhrMeT7bKxsAz9h0peF4pxwydMY1328t6Ys2NJ_AvpjQ==\",\"x-amz-cf-pop\":\"LHR50-P6\",\"x-amz-server-side-encryption\":\"AES256\",\"x-cache\":\"Hit from cloudfront\",\"x-amz-replication-status\":\"COMPLETED\",\"x-amz-version-id\":\"yoF0TtLM7ATybE7y3AzFMA1RJNZthmFJ\",\"x-content-type-options\":\"nosniff\",\"referrer-policy\":\"strict-origin-when-cross-origin\",\"cache-control\":\"public, max-age=31536000, immutable\"},\"url\":\"https://deno.land/x/silverbullet@0.10.1/lib/plugos/worker_runtime.ts\",\"time\":1733577786}", "import type { UploadFile } from \"../types.ts\";\nimport { syscall } from \"../syscall.ts\";\nimport type { PageRef } from \"../lib/page_ref.ts\";\nimport type { FilterOption } from \"../../type/client.ts\";\n\n/**\n * Exposes various editor utilities.\n * Important: These syscalls are only available in the client.\n * @module\n */\n\n/**\n * Returns the name of the page currently open in the editor.\n * @returns the current page name\n */\nexport function getCurrentPage(): Promise<string> {\n  return syscall(\"editor.getCurrentPage\");\n}\n\n/**\n * Returns the full text of the currently open page\n */\nexport function getText(): Promise<string> {\n  return syscall(\"editor.getText\");\n}\n\n/**\n * This updates the editor text, but in a minimal-diff way:\n * it compares the current editor text with the new text, and only sends the changes to the editor, thereby preserving cursor location\n */\nexport function setText(\n  newText: string,\n  isolateHistory = false,\n): Promise<void> {\n  return syscall(\"editor.setText\", newText, isolateHistory);\n}\n\n/**\n * Returns the position (in # of characters from the beginning of the file) of the cursor in the editor\n */\nexport function getCursor(): Promise<number> {\n  return syscall(\"editor.getCursor\");\n}\n\n/**\n * Returns the line number and column number of the cursor in the editor\n */\nexport function getSelection(): Promise<{ from: number; to: number }> {\n  return syscall(\"editor.getSelection\");\n}\n\n/**\n * Sets the position of the cursor in the editor\n * @param from the start position of the selection\n * @param to the end position of the selection\n */\nexport function setSelection(from: number, to: number): Promise<void> {\n  return syscall(\"editor.setSelection\", from, to);\n}\n\n/**\n * Forces a save of the current page\n */\nexport function save(): Promise<void> {\n  return syscall(\"editor.save\");\n}\n\n/**\n * Navigates to the specified page reference\n * @param pageRef the page reference to navigate to\n * @param replaceState whether to replace the current history state in the browser history\n * @param newWindow whether to open the page in a new window\n */\nexport function navigate(\n  pageRef: PageRef,\n  replaceState = false,\n  newWindow = false,\n): Promise<void> {\n  return syscall(\"editor.navigate\", pageRef, replaceState, newWindow);\n}\n\n/**\n * Opens the page navigator\n * @param mode the mode to open the navigator in\n */\nexport function openPageNavigator(\n  mode: \"page\" | \"meta\" | \"all\" = \"page\",\n): Promise<void> {\n  return syscall(\"editor.openPageNavigator\", mode);\n}\n\n/**\n * Opens the command palette\n */\nexport function openCommandPalette(): Promise<void> {\n  return syscall(\"editor.openCommandPalette\");\n}\n\n/**\n * Force reloads the current page\n */\nexport function reloadPage(): Promise<void> {\n  return syscall(\"editor.reloadPage\");\n}\n\n/**\n * Force reloads the browser UI\n */\nexport function reloadUI(): Promise<void> {\n  return syscall(\"editor.reloadUI\");\n}\n\n/**\n * Reloads the config and commands, also in the server\n */\nexport function reloadConfigAndCommands(): Promise<void> {\n  return syscall(\"editor.reloadConfigAndCommands\");\n}\n\n/**\n * Opens the specified URL in the browser\n * @param url the URL to open\n * @param existingWindow whether to open the URL in an existing window\n */\nexport function openUrl(url: string, existingWindow = false): Promise<void> {\n  return syscall(\"editor.openUrl\", url, existingWindow);\n}\n\nexport function newWindow(): Promise<void> {\n  return syscall(\"editor.newWindow\");\n}\n\n/**\n * This is calling the `go()` method from the History Web API.\n * @param delta Position in history to move to relative to the current page,\n * where a negative value moves backwards, and positive forwards\n */\nexport function goHistory(delta: number): Promise<void> {\n  return syscall(\"editor.goHistory\", delta);\n}\n\n/**\n * Force the client to download the file in dataUrl with filename as file name\n * @param filename the name of the file to download\n * @param dataUrl the dataUrl of the file to download\n */\nexport function downloadFile(filename: string, dataUrl: string): Promise<void> {\n  return syscall(\"editor.downloadFile\", filename, dataUrl);\n}\n\n/**\n * Triggers the browser's native file upload dialog/popup\n * @param accept the file types to accept\n * @param capture the capture mode for the file input\n */\nexport function uploadFile(\n  accept?: string,\n  capture?: string,\n): Promise<UploadFile> {\n  return syscall(\"editor.uploadFile\", accept, capture);\n}\n\n/**\n * Shows a flash notification to the user (top right corner)\n * @param message the message to show\n * @param type the type of notification to show\n */\nexport function flashNotification(\n  message: string,\n  type: \"info\" | \"error\" = \"info\",\n): Promise<void> {\n  return syscall(\"editor.flashNotification\", message, type);\n}\n\n/**\n * Exposes a filter box UI (similar to the page navigator and command palette)\n * @param label the label to show left of the input box\n * @param options the options to show and to filter on\n * @param helpText the help text to show below the input box\n * @param placeHolder the placeholder text to show in the input box\n */\nexport function filterBox(\n  label: string,\n  options: FilterOption[],\n  helpText = \"\",\n  placeHolder = \"\",\n): Promise<FilterOption | undefined> {\n  return syscall(\"editor.filterBox\", label, options, helpText, placeHolder);\n}\n\n/**\n * Shows a panel in the editor\n * @param id the location of the panel to show\n * @param mode the mode or \"size\" of the panel\n * @param html the html content of the panel\n * @param script the script content of the panel\n */\nexport function showPanel(\n  id: \"lhs\" | \"rhs\" | \"bhs\" | \"modal\",\n  mode: number,\n  html: string,\n  script = \"\",\n): Promise<void> {\n  return syscall(\"editor.showPanel\", id, mode, html, script);\n}\n\n/**\n * Hides a panel in the editor\n * @param id the location of the panel to hide\n */\nexport function hidePanel(\n  id: \"lhs\" | \"rhs\" | \"bhs\" | \"modal\",\n): Promise<void> {\n  return syscall(\"editor.hidePanel\", id);\n}\n\n/**\n * Insert text at the specified position into the editor\n * @param text the text to insert\n * @param pos\n */\nexport function insertAtPos(text: string, pos: number): Promise<void> {\n  return syscall(\"editor.insertAtPos\", text, pos);\n}\n\n/**\n * Replace the text in the specified range in the editor\n * @param from the start position of the range\n * @param to the end position of the range\n * @param text the text to replace with\n */\nexport function replaceRange(\n  from: number,\n  to: number,\n  text: string,\n): Promise<void> {\n  return syscall(\"editor.replaceRange\", from, to, text);\n}\n\n/**\n * Move the cursor to the specified position in the editor\n * @param pos the position to move the cursor to\n * @param center whether to center the cursor in the editor after moving\n */\nexport function moveCursor(pos: number, center = false): Promise<void> {\n  return syscall(\"editor.moveCursor\", pos, center);\n}\n\n/**\n * Move the cursor to the specified line and column in the editor\n * @param line the line number to move the cursor to\n * @param column the column number to move the cursor to\n * @param center whether to center the cursor in the editor after moving\n */\nexport function moveCursorToLine(\n  line: number,\n  column = 1,\n  center = false,\n): Promise<void> {\n  return syscall(\"editor.moveCursorToLine\", line, column, center);\n}\n\n/**\n * Insert text at the cursor position in the editor\n * @param text the text to insert\n */\nexport function insertAtCursor(text: string): Promise<void> {\n  return syscall(\"editor.insertAtCursor\", text);\n}\n\n/**\n * Dispatch a CodeMirror transaction: https://codemirror.net/docs/ref/#state.Transaction\n */\nexport function dispatch(change: any): Promise<void> {\n  return syscall(\"editor.dispatch\", change);\n}\n\n/**\n * Prompt the user for text input\n * @param message the message to show in the prompt\n * @param defaultValue a default value pre-filled in the prompt\n * @returns\n */\nexport function prompt(\n  message: string,\n  defaultValue = \"\",\n): Promise<string | undefined> {\n  return syscall(\"editor.prompt\", message, defaultValue);\n}\n\n/**\n * Prompt the user for confirmation\n * @param message the message to show in the confirmation dialog\n * @returns\n */\nexport function confirm(\n  message: string,\n): Promise<boolean> {\n  return syscall(\"editor.confirm\", message);\n}\n\n/**\n * Get the value of a UI option\n * @param key the key of the UI option to get\n * @returns\n */\nexport function getUiOption(key: string): Promise<any> {\n  return syscall(\"editor.getUiOption\", key);\n}\n\n/**\n * Set the value of a UI option\n * @param key the key of the UI option to set\n * @param value the value to set the UI option to\n */\nexport function setUiOption(key: string, value: any): Promise<void> {\n  return syscall(\"editor.setUiOption\", key, value);\n}\n\n/**\n * Perform a fold at the current cursor position\n */\nexport function fold(): Promise<void> {\n  return syscall(\"editor.fold\");\n}\n\n/**\n * Perform an unfold at the current cursor position\n */\nexport function unfold(): Promise<void> {\n  return syscall(\"editor.unfold\");\n}\n\n/**\n * Toggle the fold at the current cursor position\n */\nexport function toggleFold(): Promise<void> {\n  return syscall(\"editor.toggleFold\");\n}\n\n/**\n * Fold all code blocks in the editor\n */\nexport function foldAll(): Promise<void> {\n  return syscall(\"editor.foldAll\");\n}\n\n/**\n * Unfold all code blocks in the editor\n */\nexport function unfoldAll(): Promise<void> {\n  return syscall(\"editor.unfoldAll\");\n}\n\n/**\n * Perform an undo operation of the last edit in the editor\n */\nexport function undo(): Promise<void> {\n  return syscall(\"editor.undo\");\n}\n\n/**\n * Perform a redo operation of the last undo in the editor\n */\nexport function redo(): Promise<void> {\n  return syscall(\"editor.redo\");\n}\n\n/**\n * Open the editor's native search panel\n */\nexport function openSearchPanel(): Promise<void> {\n  return syscall(\"editor.openSearchPanel\");\n}\n\n/**\n * Copy the specified data to the clipboard\n * @param data the data to copy\n */\nexport function copyToClipboard(data: string | Blob): Promise<void> {\n  return syscall(\"editor.copyToClipboard\", data);\n}\n\n/**\n * Delete the current line in the editor\n */\nexport function deleteLine(): Promise<void> {\n  return syscall(\"editor.deleteLine\");\n}\n\n// Vim-mode specific syscalls\n\n/**\n * Execute a Vim ex command\n * @param exCommand the ex command to execute\n */\nexport function vimEx(exCommand: string): Promise<any> {\n  return syscall(\"editor.vimEx\", exCommand);\n}\n\n// denoCacheMetadata={\"headers\":{\"x-goog-stored-content-length\":\"10378\",\"x-goog-storage-class\":\"STANDARD\",\"x-goog-stored-content-encoding\":\"identity\",\"x-guploader-uploadid\":\"AFiumC6aCp8VdH9IH0Cy8_rNBg0HXh71V92xopdt-VXXTQZ7k0_yn9wp4nk5Akjz0LXOEIYsnKDagSI\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"content-type\":\"text/typescript\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"server\":\"UploadServer\",\"x-jsr-cache-status\":\"miss\",\"etag\":\"\\\"2da2bb30e03c22c1cfb7ebdc016c18af\\\"\",\"date\":\"Mon, 30 Dec 2024 11:13:20 GMT\",\"x-goog-metageneration\":\"1\",\"expires\":\"Tue, 30 Dec 2025 11:13:20 GMT\",\"x-goog-generation\":\"1731616173070607\",\"content-length\":\"10378\",\"x-robots-tag\":\"noindex\",\"x-goog-hash\":\"crc32c=Wz1DJA==,md5=LaK7MOA8IsHPt+vcAWwYrw==\",\"access-control-allow-origin\":\"*\",\"via\":\"1.1 google\",\"access-control-expose-headers\":\"*\",\"x-content-type-options\":\"nosniff\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"accept-ranges\":\"bytes\",\"cross-origin-resource-policy\":\"cross-origin\",\"cache-control\":\"public, max-age=31536000, immutable\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/editor.ts\",\"time\":1735557200}", "// declare global {\n//   function syscall(name: string, ...args: any[]): Promise<any>;\n// }\n\n// This is the case when running tests only, so giving it a dummy syscall function\nif (typeof self === \"undefined\") {\n  (self as any) = {\n    syscall: () => {\n      throw new Error(\"Not implemented here\");\n    },\n  };\n}\n\n// Late binding syscall\nexport function syscall(name: string, ...args: any[]): Promise<any> {\n  return (globalThis as any).syscall(name, ...args);\n}\n\n// denoCacheMetadata={\"headers\":{\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"content-type\":\"text/typescript\",\"x-guploader-uploadid\":\"AFiumC5FHfH0wh_JKwfDfpzrskhr4ZSA5WNJAFO4p9xhqv3upYu1viP_85OXakvpaj9Qmo6p_PM6kOI\",\"date\":\"Mon, 30 Dec 2024 11:13:19 GMT\",\"etag\":\"\\\"7f51ff650cbb44cc057590677d146ea8\\\"\",\"x-goog-hash\":\"crc32c=OlP20w==,md5=f1H/ZQy7RMwFdZBnfRRuqA==\",\"x-goog-stored-content-length\":\"463\",\"access-control-allow-origin\":\"*\",\"x-goog-metageneration\":\"1\",\"x-goog-stored-content-encoding\":\"identity\",\"x-jsr-cache-status\":\"miss\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"x-content-type-options\":\"nosniff\",\"server\":\"UploadServer\",\"via\":\"1.1 google\",\"content-length\":\"463\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-goog-storage-class\":\"STANDARD\",\"x-goog-generation\":\"1731616173690053\",\"accept-ranges\":\"bytes\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"cache-control\":\"public, max-age=31536000, immutable\",\"access-control-expose-headers\":\"*\",\"x-robots-tag\":\"noindex\",\"cross-origin-resource-policy\":\"cross-origin\",\"expires\":\"Tue, 30 Dec 2025 11:13:19 GMT\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscall.ts\",\"time\":1735557200}", "import type { CommandDef } from \"../../lib/command.ts\";\nimport type { SyscallMeta } from \"../types.ts\";\nimport type { ParseTree } from \"../lib/tree.ts\";\nimport { syscall } from \"../syscall.ts\";\nimport type { Config } from \"../../type/config.ts\";\n\n/**\n * System level syscalls\n * @module\n */\n\n/**\n * Invoke a plug function\n * @param name a string representing the name of the function to invoke (\"plug.functionName\")\n * @param args arguments to pass to the function\n * @returns\n */\nexport function invokeFunction(\n  name: string,\n  ...args: any[]\n): Promise<any> {\n  return syscall(\"system.invokeFunction\", name, ...args);\n}\n\n/**\n * Invoke a client command by name\n * Note: only available on the client\n * @param name name of the command\n * @param args arguments to pass to the command\n */\nexport function invokeCommand(name: string, args?: string[]): Promise<any> {\n  return syscall(\"system.invokeCommand\", name, args);\n}\n\n/**\n * Lists all commands available\n * @returns a map of all available commands\n */\nexport function listCommands(): Promise<Record<string, CommandDef>> {\n  return syscall(\"system.listCommands\");\n}\n\n/**\n * Lists all syscalls available\n * @returns a list of all available syscalls\n */\nexport function listSyscalls(): Promise<SyscallMeta[]> {\n  return syscall(\"system.listSyscalls\");\n}\n\n/**\n * Invoke a space function by name\n * @param name a string representing the name of the function to invoke\n * @param args arguments to pass to the function\n * @returns the value returned by the function\n */\nexport function invokeSpaceFunction(\n  name: string,\n  ...args: any[]\n): Promise<any> {\n  return syscall(\"system.invokeSpaceFunction\", name, ...args);\n}\n\n/**\n * Applies attribute extractors to a ParseTree\n */\nexport function applyAttributeExtractors(\n  tags: string[],\n  text: string,\n  tree: ParseTree,\n): Promise<Record<string, any>[]> {\n  return syscall(\"system.applyAttributeExtractors\", tags, text, tree);\n}\n\n/**\n * Loads a particular space configuration key (or all of them when no key is spacified)\n * @param key the key to load, when not specified, all keys are loaded\n * @param defaultValue the default value to return when the key is not found\n * @returns either the value of the key or all keys as a Record<string, any>\n */\nexport async function getSpaceConfig(\n  key?: string,\n  defaultValue?: any,\n): Promise<any> {\n  return (await syscall(\"system.getSpaceConfig\", key)) ?? defaultValue;\n}\n\n/**\n * Trigger a reload of all plugs\n * @returns\n */\nexport function reloadPlugs(): Promise<void> {\n  return syscall(\"system.reloadPlugs\");\n}\n\n/**\n * Trigger an explicit reload of the configuration\n * @returns the new configuration\n */\nexport function reloadConfig(): Promise<Config> {\n  return syscall(\"system.reloadConfig\");\n}\n\n/**\n * Returns what runtime environment this plug is run in, e.g. \"server\" or \"client\" can be undefined, which would mean a hybrid environment (such as mobile)\n */\nexport function getEnv(): Promise<string | undefined> {\n  return syscall(\"system.getEnv\");\n}\n\n/**\n * Returns the current mode of the system, either \"ro\" (read-only) or \"rw\" (read-write)\n */\nexport function getMode(): Promise<\"ro\" | \"rw\"> {\n  return syscall(\"system.getMode\");\n}\n\n/**\n * Returns the SilverBullet version\n */\nexport function getVersion(): Promise<string> {\n  return syscall(\"system.getVersion\");\n}\n\n// denoCacheMetadata={\"headers\":{\"access-control-expose-headers\":\"*\",\"date\":\"Mon, 30 Dec 2024 11:13:20 GMT\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-storage-class\":\"STANDARD\",\"x-goog-metageneration\":\"1\",\"content-type\":\"text/typescript\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"cache-control\":\"public, max-age=31536000, immutable\",\"content-length\":\"3328\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"x-guploader-uploadid\":\"AFiumC5bj7Uo8uQRYQfbx3JCV-4tLJkXEArgqkxMO8yF2fEko180RYJfhII7ew3AGa1U-zZwJlOtJGk\",\"via\":\"1.1 google\",\"x-jsr-cache-status\":\"miss\",\"x-robots-tag\":\"noindex\",\"x-content-type-options\":\"nosniff\",\"x-goog-generation\":\"1731616173602074\",\"expires\":\"Tue, 30 Dec 2025 11:13:20 GMT\",\"server\":\"UploadServer\",\"x-goog-stored-content-length\":\"3328\",\"accept-ranges\":\"bytes\",\"cross-origin-resource-policy\":\"cross-origin\",\"x-goog-hash\":\"crc32c=ZWMKMQ==,md5=vLzMAKeXT63NWyxxSXtITw==\",\"access-control-allow-origin\":\"*\",\"x-goog-stored-content-encoding\":\"identity\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"etag\":\"\\\"bcbccc00a7974fadcd5b2c71497b484f\\\"\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/system.ts\",\"time\":1735557200}", "import { syscall } from \"../syscall.ts\";\n\n/**\n * Implements a very simple (string) key value store for the client.\n * Generally should only be used to set some client-specific states, such as preferences.\n * @module\n */\n\n/**\n * Sets a value in the client store.\n * @param key the key to set\n * @param value the value to set\n */\nexport function set(key: string, value: any): Promise<void> {\n  return syscall(\"clientStore.set\", key, value);\n}\n\n/**\n * Gets a value from the client store.\n * @param key the key to get\n * @returns the value associated with the key\n */\nexport function get(key: string): Promise<any> {\n  return syscall(\"clientStore.get\", key);\n}\n\n/**\n * Deletes a value from the client store.\n * @param key the key to delete\n */\nexport function del(key: string): Promise<void> {\n  return syscall(\"clientStore.delete\", key);\n}\n\n// denoCacheMetadata={\"headers\":{\"x-goog-stored-content-length\":\"837\",\"accept-ranges\":\"bytes\",\"x-guploader-uploadid\":\"AFiumC7Nkv4WtmV6YykZi7a3QSDjgLiDWS-p6uqGIpPWB6PEFRcXDWKxxhX5NbmLRxu3KrBTQMBiAyk\",\"x-goog-stored-content-encoding\":\"identity\",\"access-control-expose-headers\":\"*\",\"expires\":\"Tue, 30 Dec 2025 11:13:20 GMT\",\"content-type\":\"text/typescript\",\"x-robots-tag\":\"noindex\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"etag\":\"\\\"b2a3dc3c65fa012ac70634b6b1149e9f\\\"\",\"x-goog-storage-class\":\"STANDARD\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"server\":\"UploadServer\",\"x-jsr-cache-status\":\"miss\",\"access-control-allow-origin\":\"*\",\"x-content-type-options\":\"nosniff\",\"cache-control\":\"public, max-age=31536000, immutable\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"via\":\"1.1 google\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"content-length\":\"837\",\"x-goog-metageneration\":\"1\",\"x-goog-hash\":\"crc32c=m/vu0Q==,md5=sqPcPGX6ASrHBjS2sRSenw==\",\"x-goog-generation\":\"1731616173602680\",\"cross-origin-resource-policy\":\"cross-origin\",\"date\":\"Mon, 30 Dec 2024 11:13:20 GMT\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/clientStore.ts\",\"time\":1735557200}", "import { base64DecodeDataUrl } from \"../../lib/crypto.ts\";\nimport { syscall } from \"../syscall.ts\";\n\n/**\n * Reads an asset embedded in a plug (via the `assets` field in the plug manifest).\n * @param plugName name of the plug to read asset from\n * @param name name of the asset to read\n * @param encoding either \"utf8\" or \"dataurl\"\n * @returns the content of the asset in the requested encoding\n */\nexport async function readAsset(\n  plugName: string,\n  name: string,\n  encoding: \"utf8\" | \"dataurl\" = \"utf8\",\n): Promise<string> {\n  const dataUrl = await syscall(\"asset.readAsset\", plugName, name) as string;\n  switch (encoding) {\n    case \"utf8\":\n      return new TextDecoder().decode(base64DecodeDataUrl(dataUrl));\n    case \"dataurl\":\n      return dataUrl;\n  }\n}\n\n// denoCacheMetadata={\"headers\":{\"cross-origin-resource-policy\":\"cross-origin\",\"server\":\"UploadServer\",\"x-robots-tag\":\"noindex\",\"cache-control\":\"public, max-age=31536000, immutable\",\"date\":\"Mon, 30 Dec 2024 11:13:20 GMT\",\"x-jsr-cache-status\":\"miss\",\"x-goog-hash\":\"crc32c=cX20Sg==,md5=XsD9jAdyju3EhaWK5NUASg==\",\"access-control-allow-origin\":\"*\",\"expires\":\"Tue, 30 Dec 2025 11:13:20 GMT\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-storage-class\":\"STANDARD\",\"etag\":\"\\\"5ec0fd8c07728eedc485a58ae4d5004a\\\"\",\"x-goog-stored-content-encoding\":\"identity\",\"access-control-expose-headers\":\"*\",\"x-goog-generation\":\"1731616173574242\",\"via\":\"1.1 google\",\"x-content-type-options\":\"nosniff\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"content-type\":\"text/typescript\",\"x-goog-metageneration\":\"1\",\"content-length\":\"763\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"accept-ranges\":\"bytes\",\"x-goog-stored-content-length\":\"763\",\"x-guploader-uploadid\":\"AFiumC42tFiq-8qwkzlXx5hhg1aZFXM3ykteG5QTMo9znf5mJkmlF82qAkXfjf0wZig7Gwt9gNwpTVA\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/asset.ts\",\"time\":1735557200}", "export function simpleHash(s: string): number {\n  let hash = 0,\n    i,\n    chr;\n  if (s.length === 0) return hash;\n  for (i = 0; i < s.length; i++) {\n    chr = s.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport function base64Decode(s: string): Uint8Array {\n  const binString = atob(s);\n  const len = binString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function base64Encode(buffer: Uint8Array | string): string {\n  if (typeof buffer === \"string\") {\n    buffer = new TextEncoder().encode(buffer);\n  }\n  let binary = \"\";\n  const len = buffer.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(buffer[i]);\n  }\n  return btoa(binary);\n}\n\nexport function base64EncodedDataUrl(\n  mimeType: string,\n  buffer: Uint8Array,\n): string {\n  return `data:${mimeType};base64,${base64Encode(buffer)}`;\n}\n\nexport function base64DecodeDataUrl(dataUrl: string): Uint8Array {\n  const b64Encoded = dataUrl.split(\",\", 2)[1];\n  return base64Decode(b64Encoded);\n}\n\n// denoCacheMetadata={\"headers\":{\"via\":\"1.1 google\",\"etag\":\"\\\"baf8705ec732bd032a24b0140b8cdab7\\\"\",\"x-goog-metageneration\":\"1\",\"x-guploader-uploadid\":\"AFiumC5yzpLsYab19oxyaOtlhCKa5xAmtPDpKB_GfwEoh2vjbkXxRwZATAQsly2fOEBKOY6SjK2ont0\",\"expires\":\"Tue, 30 Dec 2025 11:13:19 GMT\",\"date\":\"Mon, 30 Dec 2024 11:13:19 GMT\",\"x-goog-stored-content-length\":\"1153\",\"x-content-type-options\":\"nosniff\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"x-goog-generation\":\"1731616173712245\",\"content-type\":\"text/typescript\",\"x-goog-hash\":\"crc32c=x5JhOQ==,md5=uvhwXscyvQMqJLAUC4zatw==\",\"access-control-allow-origin\":\"*\",\"cache-control\":\"public, max-age=31536000, immutable\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"accept-ranges\":\"bytes\",\"x-robots-tag\":\"noindex\",\"x-goog-stored-content-encoding\":\"identity\",\"content-length\":\"1153\",\"cross-origin-resource-policy\":\"cross-origin\",\"access-control-expose-headers\":\"*\",\"x-goog-storage-class\":\"STANDARD\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"server\":\"UploadServer\",\"x-jsr-cache-status\":\"miss\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/lib/crypto.ts\",\"time\":1735557200}", "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nconst encoder = new TextEncoder();\n\nfunction getTypeName(value: unknown): string {\n  const type = typeof value;\n  if (type !== \"object\") {\n    return type;\n  } else if (value === null) {\n    return \"null\";\n  } else {\n    return value?.constructor?.name ?? \"object\";\n  }\n}\n\nexport function validateBinaryLike(source: unknown): Uint8Array {\n  if (typeof source === \"string\") {\n    return encoder.encode(source);\n  } else if (source instanceof Uint8Array) {\n    return source;\n  } else if (source instanceof ArrayBuffer) {\n    return new Uint8Array(source);\n  }\n  throw new TypeError(\n    `Cannot validate the input as it must be a Uint8Array, a string, or an ArrayBuffer: received a value of the type ${\n      getTypeName(source)\n    }`,\n  );\n}\n\n// denoCacheMetadata={\"headers\":{\"last-modified\":\"Wed, 18 Dec 2024 07:16:29 GMT\",\"access-control-allow-origin\":\"*\",\"x-goog-hash\":\"crc32c=o0E+JA==,md5=7nNXDEetLg8M5t0Qgr3Qkg==\",\"expires\":\"Tue, 30 Dec 2025 14:38:35 GMT\",\"x-goog-stored-content-length\":\"819\",\"x-goog-generation\":\"1734506189409589\",\"via\":\"1.1 google\",\"etag\":\"\\\"ee73570c47ad2e0f0ce6dd1082bdd092\\\"\",\"content-type\":\"text/typescript\",\"x-jsr-cache-status\":\"revalidated\",\"cache-control\":\"public, max-age=31536000, immutable\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"x-goog-storage-class\":\"STANDARD\",\"access-control-expose-headers\":\"*\",\"cross-origin-resource-policy\":\"cross-origin\",\"accept-ranges\":\"bytes\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-content-type-options\":\"nosniff\",\"x-guploader-uploadid\":\"AFiumC5U4h6o-9V_HnDFfgzun_UoE9PkNg7HT5TqfJ9j04nk7WD40W0zg1o0ZA2gH9PLeWyy\",\"x-goog-metageneration\":\"1\",\"server\":\"UploadServer\",\"date\":\"Mon, 30 Dec 2024 14:38:35 GMT\",\"x-goog-stored-content-encoding\":\"identity\",\"content-length\":\"819\",\"age\":\"0\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-robots-tag\":\"noindex\"},\"url\":\"https://jsr.io/@std/encoding/1.0.6/_validate_binary_like.ts\",\"time\":1735569515}", "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright (c) 2014 Jameson Little. MIT License.\n// This module is browser compatible.\n\n/**\n * Utilities for\n * {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-6 | base32}\n * encoding and decoding.\n *\n * Modified from {@link https://github.com/beatgammit/base64-js}.\n *\n * ```ts\n * import { encodeBase32, decodeBase32 } from \"@std/encoding/base32\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeBase32(\"foobar\"), \"MZXW6YTBOI======\");\n *\n * assertEquals(\n *   decodeBase32(\"MZXW6YTBOI======\"),\n *   new TextEncoder().encode(\"foobar\")\n * );\n * ```\n *\n * @module\n */\nimport { decode, encode } from \"./_base32_common.ts\";\n\nconst lookup: string[] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\".split(\"\");\nconst revLookup: number[] = [];\nlookup.forEach((c, i) => (revLookup[c.charCodeAt(0)] = i));\n\n/**\n * Decodes a base32-encoded string.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-6}\n *\n * @param b32 The base32-encoded string to decode.\n * @returns The decoded data.\n *\n * @example Usage\n * ```ts\n * import { decodeBase32 } from \"@std/encoding/base32\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(\n *   decodeBase32(\"GZRTMMDDGA======\"),\n *   new TextEncoder().encode(\"6c60c0\"),\n * );\n * ```\n */\nexport function decodeBase32(b32: string): Uint8Array {\n  return decode(b32, lookup);\n}\n\n/**\n * Converts data into a base32-encoded string.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-6}\n *\n * @param data The data to encode.\n * @returns The base32-encoded string.\n *\n * @example Usage\n * ```ts\n * import { encodeBase32 } from \"@std/encoding/base32\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeBase32(\"6c60c0\"), \"GZRTMMDDGA======\");\n * ```\n */\nexport function encodeBase32(data: ArrayBuffer | Uint8Array | string): string {\n  return encode(data, lookup);\n}\n\n// denoCacheMetadata={\"headers\":{\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"date\":\"Mon, 30 Dec 2024 14:38:35 GMT\",\"age\":\"0\",\"x-jsr-cache-status\":\"revalidated\",\"x-guploader-uploadid\":\"AFiumC4UKUQkYL1KK-bizVk3U6uHBAcpq61o4VPR0_gjm_sXvrl4XBRcClMJI8aU-vP9myIaUuMbCRo\",\"cache-control\":\"public, max-age=31536000, immutable\",\"expires\":\"Tue, 30 Dec 2025 14:38:35 GMT\",\"content-type\":\"text/typescript\",\"x-goog-stored-content-length\":\"1955\",\"x-goog-hash\":\"crc32c=mFCiAA==,md5=Kl3l5S8jfhPw+BpHQOatlg==\",\"x-content-type-options\":\"nosniff\",\"x-goog-generation\":\"1734506189477743\",\"last-modified\":\"Wed, 18 Dec 2024 07:16:29 GMT\",\"etag\":\"\\\"2a5de5e52f237e13f0f81a4740e6ad96\\\"\",\"via\":\"1.1 google\",\"server\":\"UploadServer\",\"x-goog-stored-content-encoding\":\"identity\",\"x-goog-storage-class\":\"STANDARD\",\"content-length\":\"1955\",\"x-goog-metageneration\":\"1\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"x-robots-tag\":\"noindex\",\"access-control-expose-headers\":\"*\",\"accept-ranges\":\"bytes\",\"access-control-allow-origin\":\"*\",\"cross-origin-resource-policy\":\"cross-origin\"},\"url\":\"https://jsr.io/@std/encoding/1.0.6/base32.ts\",\"time\":1735569515}", "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Utilities for\n * {@link https://datatracker.ietf.org/doc/html/draft-msporny-base58-03 | base58}\n * encoding and decoding.\n *\n * ```ts\n * import { encodeBase58, decodeBase58 } from \"@std/encoding/base58\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const hello = new TextEncoder().encode(\"Hello World!\");\n *\n * assertEquals(encodeBase58(hello), \"2NEpo7TZRRrLZSi2U\");\n *\n * assertEquals(decodeBase58(\"2NEpo7TZRRrLZSi2U\"), hello);\n * ```\n *\n * @module\n */\n\nimport { validateBinaryLike } from \"./_validate_binary_like.ts\";\n\n// deno-fmt-ignore\nconst mapBase58: Record<string, number> = {\n  \"1\": 0, \"2\": 1, \"3\": 2, \"4\": 3, \"5\": 4, \"6\": 5, \"7\": 6, \"8\": 7, \"9\": 8, A: 9,\n  B: 10, C: 11, D: 12, E: 13, F: 14, G: 15, H: 16, J: 17, K: 18, L: 19, M: 20,\n  N: 21, P: 22, Q: 23, R: 24, S: 25, T: 26, U: 27, V: 28, W: 29, X: 30, Y: 31,\n  Z: 32, a: 33, b: 34, c: 35, d: 36, e: 37, f: 38, g: 39, h: 40, i: 41, j: 42,\n  k: 43, m: 44, n: 45, o: 46, p: 47, q: 48, r: 49, s: 50, t: 51, u: 52, v: 53,\n  w: 54, x: 55, y: 56, z: 57\n};\n\nconst base58alphabet =\n  \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\".split(\"\");\n\n/**\n * Converts data into a base58-encoded string.\n *\n * @see {@link https://datatracker.ietf.org/doc/html/draft-msporny-base58-03#section-3}\n *\n * @param data The data to encode.\n * @returns The base58-encoded string.\n *\n * @example Usage\n * ```ts\n * import { encodeBase58 } from \"@std/encoding/base58\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeBase58(\"Hello World!\"), \"2NEpo7TZRRrLZSi2U\");\n * ```\n */\nexport function encodeBase58(data: ArrayBuffer | Uint8Array | string): string {\n  const uint8tData = validateBinaryLike(data);\n\n  let length = 0;\n  let zeroes = 0;\n\n  // Counting leading zeroes\n  let index = 0;\n  while (uint8tData[index] === 0) {\n    zeroes++;\n    index++;\n  }\n\n  const notZeroUint8Data = uint8tData.slice(index);\n\n  const size = Math.round((uint8tData.length * 138) / 100 + 1);\n  const b58Encoding: number[] = [];\n\n  notZeroUint8Data.forEach((byte) => {\n    let i = 0;\n    let carry = byte;\n\n    for (\n      let reverseIterator = size - 1;\n      (carry > 0 || i < length) && reverseIterator !== -1;\n      reverseIterator--, i++\n    ) {\n      carry += (b58Encoding[reverseIterator] ?? 0) * 256;\n      b58Encoding[reverseIterator] = Math.round(carry % 58);\n      carry = Math.floor(carry / 58);\n    }\n\n    length = i;\n  });\n\n  const strResult: string[] = Array.from({\n    length: b58Encoding.length + zeroes,\n  });\n\n  if (zeroes > 0) {\n    strResult.fill(\"1\", 0, zeroes);\n  }\n\n  b58Encoding.forEach((byteValue) =>\n    strResult.push(base58alphabet[byteValue]!)\n  );\n\n  return strResult.join(\"\");\n}\n\n/**\n * Decodes a base58-encoded string.\n *\n * @see {@link https://datatracker.ietf.org/doc/html/draft-msporny-base58-03#section-4}\n *\n * @param b58 The base58-encoded string to decode.\n * @returns The decoded data.\n *\n * @example Usage\n * ```ts\n * import { decodeBase58 } from \"@std/encoding/base58\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(\n *   decodeBase58(\"2NEpo7TZRRrLZSi2U\"),\n *   new TextEncoder().encode(\"Hello World!\")\n * );\n * ```\n */\nexport function decodeBase58(b58: string): Uint8Array {\n  const splitInput = b58.trim().split(\"\");\n\n  let length = 0;\n  let ones = 0;\n\n  // Counting leading ones\n  let index = 0;\n  while (splitInput[index] === \"1\") {\n    ones++;\n    index++;\n  }\n\n  const notZeroData = splitInput.slice(index);\n\n  const size = Math.round((b58.length * 733) / 1000 + 1);\n  const output: number[] = [];\n\n  notZeroData.forEach((char, idx) => {\n    let carry = mapBase58[char];\n    let i = 0;\n\n    if (carry === undefined) {\n      throw new TypeError(\n        `Invalid base58 char at index ${idx} with value ${char}`,\n      );\n    }\n\n    for (\n      let reverseIterator = size - 1;\n      (carry > 0 || i < length) && reverseIterator !== -1;\n      reverseIterator--, i++\n    ) {\n      carry += 58 * (output[reverseIterator] ?? 0);\n      output[reverseIterator] = Math.round(carry % 256);\n      carry = Math.floor(carry / 256);\n    }\n\n    length = i;\n  });\n\n  const validOutput = output.filter((item) => item !== undefined);\n\n  if (ones > 0) {\n    const onesResult = Array.from({ length: ones }).fill(0, 0, ones);\n\n    return new Uint8Array([...onesResult, ...validOutput] as number[]);\n  }\n\n  return new Uint8Array(validOutput);\n}\n\n// denoCacheMetadata={\"headers\":{\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-jsr-cache-status\":\"miss\",\"content-length\":\"4469\",\"x-goog-stored-content-length\":\"4469\",\"cache-control\":\"public, max-age=31536000, immutable\",\"x-goog-hash\":\"crc32c=pIB9Fw==,md5=plgpbrg+skTBTLvvy16zWA==\",\"access-control-expose-headers\":\"*\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"content-type\":\"text/typescript\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"date\":\"Mon, 30 Dec 2024 14:38:35 GMT\",\"x-robots-tag\":\"noindex\",\"access-control-allow-origin\":\"*\",\"x-goog-stored-content-encoding\":\"identity\",\"cross-origin-resource-policy\":\"cross-origin\",\"last-modified\":\"Wed, 18 Dec 2024 07:16:29 GMT\",\"x-guploader-uploadid\":\"AFiumC4EW7yuvQRQYrIu491T90xSEMGzWKKLOPz6VWu0TZ3GdukFzAynXn9Vtzce-UDdHmyMnsz8PJg\",\"x-goog-generation\":\"1734506189429838\",\"x-goog-metageneration\":\"1\",\"x-content-type-options\":\"nosniff\",\"expires\":\"Tue, 30 Dec 2025 14:38:35 GMT\",\"accept-ranges\":\"bytes\",\"etag\":\"\\\"a658296eb83eb244c14cbbefcb5eb358\\\"\",\"x-goog-storage-class\":\"STANDARD\",\"server\":\"UploadServer\",\"via\":\"1.1 google\"},\"url\":\"https://jsr.io/@std/encoding/1.0.6/base58.ts\",\"time\":1735569515}", "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Utilities for\n * {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-4 | base64}\n * encoding and decoding.\n *\n * ```ts\n * import {\n *   encodeBase64,\n *   decodeBase64,\n * } from \"@std/encoding/base64\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const foobar = new TextEncoder().encode(\"foobar\");\n *\n * assertEquals(encodeBase64(foobar), \"Zm9vYmFy\");\n * assertEquals(decodeBase64(\"Zm9vYmFy\"), foobar);\n * ```\n *\n * @module\n */\n\nimport { validateBinaryLike } from \"./_validate_binary_like.ts\";\n\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\",\n];\n\n/**\n * Converts data into a base64-encoded string.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-4}\n *\n * @param data The data to encode.\n * @returns The base64-encoded string.\n *\n * @example Usage\n * ```ts\n * import { encodeBase64 } from \"@std/encoding/base64\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeBase64(\"foobar\"), \"Zm9vYmFy\");\n * ```\n */\nexport function encodeBase64(data: ArrayBuffer | Uint8Array | string): string {\n  // CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n  const uint8 = validateBinaryLike(data);\n  let result = \"\";\n  let i;\n  const l = uint8.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[(uint8[i - 2]!) >> 2];\n    result += base64abc[\n      (((uint8[i - 2]!) & 0x03) << 4) |\n      ((uint8[i - 1]!) >> 4)\n    ];\n    result += base64abc[\n      (((uint8[i - 1]!) & 0x0f) << 2) |\n      ((uint8[i]!) >> 6)\n    ];\n    result += base64abc[(uint8[i]!) & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[(uint8[i - 2]!) >> 2];\n    result += base64abc[((uint8[i - 2]!) & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[(uint8[i - 2]!) >> 2];\n    result += base64abc[\n      (((uint8[i - 2]!) & 0x03) << 4) |\n      ((uint8[i - 1]!) >> 4)\n    ];\n    result += base64abc[((uint8[i - 1]!) & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\n/**\n * Decodes a base64-encoded string.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-4}\n *\n * @param b64 The base64-encoded string to decode.\n * @returns The decoded data.\n *\n * @example Usage\n * ```ts\n * import { decodeBase64 } from \"@std/encoding/base64\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(\n *   decodeBase64(\"Zm9vYmFy\"),\n *   new TextEncoder().encode(\"foobar\")\n * );\n * ```\n */\nexport function decodeBase64(b64: string): Uint8Array {\n  const binString = atob(b64);\n  const size = binString.length;\n  const bytes = new Uint8Array(size);\n  for (let i = 0; i < size; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n\n// denoCacheMetadata={\"headers\":{\"x-goog-storage-class\":\"STANDARD\",\"access-control-allow-origin\":\"*\",\"cross-origin-resource-policy\":\"cross-origin\",\"x-content-type-options\":\"nosniff\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"cache-control\":\"public, max-age=31536000, immutable\",\"x-robots-tag\":\"noindex\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"last-modified\":\"Wed, 18 Dec 2024 07:16:29 GMT\",\"content-type\":\"text/typescript\",\"content-length\":\"3253\",\"x-goog-stored-content-encoding\":\"identity\",\"x-goog-hash\":\"crc32c=m6lVkA==,md5=Y8IWdEeU1fGgW3HVI+5SDg==\",\"etag\":\"\\\"63c216744794d5f1a05b71d523ee520e\\\"\",\"access-control-expose-headers\":\"*\",\"age\":\"0\",\"via\":\"1.1 google\",\"expires\":\"Tue, 30 Dec 2025 14:38:35 GMT\",\"accept-ranges\":\"bytes\",\"server\":\"UploadServer\",\"x-goog-stored-content-length\":\"3253\",\"x-goog-metageneration\":\"1\",\"x-goog-generation\":\"1734506189360262\",\"x-guploader-uploadid\":\"AFiumC4fositLT8pcpLiA1hpb9Th8vJwslvh0Oigz5YFRVtN-93whHq3qFUMeUiexl1k5m6D\",\"date\":\"Mon, 30 Dec 2024 14:38:35 GMT\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"x-jsr-cache-status\":\"revalidated\"},\"url\":\"https://jsr.io/@std/encoding/1.0.6/base64.ts\",\"time\":1735569515}", "// Copyright 2009 The Go Authors. All rights reserved.\n// https://github.com/golang/go/blob/master/LICENSE\n// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Port of the Go\n * {@link https://github.com/golang/go/blob/go1.12.5/src/encoding/hex/hex.go | encoding/hex}\n * library.\n *\n * ```ts\n * import {\n *   decodeHex,\n *   encodeHex,\n * } from \"@std/encoding/hex\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeHex(\"abc\"), \"616263\");\n *\n * assertEquals(\n *   decodeHex(\"616263\"),\n *   new TextEncoder().encode(\"abc\"),\n * );\n * ```\n *\n * @module\n */\n\nimport { validateBinaryLike } from \"./_validate_binary_like.ts\";\n\nconst hexTable = new TextEncoder().encode(\"0123456789abcdef\");\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n\nfunction errInvalidByte(byte: number) {\n  return new TypeError(`Invalid byte '${String.fromCharCode(byte)}'`);\n}\n\nfunction errLength(len: number) {\n  return new RangeError(\n    `Cannot decode the hex string as the input length should be even: length is ${len}`,\n  );\n}\n\n/** Converts a hex character into its value. */\nfunction fromHexChar(byte: number): number {\n  // '0' <= byte && byte <= '9'\n  if (48 <= byte && byte <= 57) return byte - 48;\n  // 'a' <= byte && byte <= 'f'\n  if (97 <= byte && byte <= 102) return byte - 97 + 10;\n  // 'A' <= byte && byte <= 'F'\n  if (65 <= byte && byte <= 70) return byte - 65 + 10;\n\n  throw errInvalidByte(byte);\n}\n\n/**\n * Converts data into a hex-encoded string.\n *\n * @param src The data to encode.\n *\n * @returns The hex-encoded string.\n *\n * @example Usage\n * ```ts\n * import { encodeHex } from \"@std/encoding/hex\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeHex(\"abc\"), \"616263\");\n * ```\n */\nexport function encodeHex(src: string | Uint8Array | ArrayBuffer): string {\n  const u8 = validateBinaryLike(src);\n\n  const dst = new Uint8Array(u8.length * 2);\n  for (let i = 0; i < u8.length; i++) {\n    const v = u8[i]!;\n    dst[i * 2] = hexTable[v >> 4]!;\n    dst[i * 2 + 1] = hexTable[v & 0x0f]!;\n  }\n  return textDecoder.decode(dst);\n}\n\n/**\n * Decodes the given hex-encoded string. If the input is malformed, an error is\n * thrown.\n *\n * @param src The hex-encoded string to decode.\n *\n * @returns The decoded data.\n *\n * @example Usage\n * ```ts\n * import { decodeHex } from \"@std/encoding/hex\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(\n *   decodeHex(\"616263\"),\n *   new TextEncoder().encode(\"abc\"),\n * );\n * ```\n */\nexport function decodeHex(src: string): Uint8Array {\n  const u8 = textEncoder.encode(src);\n  const dst = new Uint8Array(u8.length / 2);\n  for (let i = 0; i < dst.length; i++) {\n    const a = fromHexChar(u8[i * 2]!);\n    const b = fromHexChar(u8[i * 2 + 1]!);\n    dst[i] = (a << 4) | b;\n  }\n\n  if (u8.length % 2 === 1) {\n    // Check for invalid char before reporting bad length,\n    // since the invalid char (if present) is an earlier problem.\n    fromHexChar(u8[dst.length * 2]!);\n    throw errLength(u8.length);\n  }\n\n  return dst;\n}\n\n// denoCacheMetadata={\"headers\":{\"x-goog-generation\":\"1734506189453302\",\"x-goog-stored-content-encoding\":\"identity\",\"x-goog-stored-content-length\":\"3102\",\"x-goog-storage-class\":\"STANDARD\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"content-type\":\"text/typescript\",\"age\":\"0\",\"last-modified\":\"Wed, 18 Dec 2024 07:16:29 GMT\",\"date\":\"Mon, 30 Dec 2024 14:38:35 GMT\",\"server\":\"UploadServer\",\"x-guploader-uploadid\":\"AFiumC5iabb5oxaLsNrpxE1ymS4EyYRcSgGHI0tAO-TTDW195XZ52ICa7vUPKldlg7KMMmw6\",\"cache-control\":\"public, max-age=31536000, immutable\",\"x-jsr-cache-status\":\"revalidated\",\"x-goog-metageneration\":\"1\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"content-length\":\"3102\",\"via\":\"1.1 google\",\"access-control-allow-origin\":\"*\",\"etag\":\"\\\"f23d42ef1298ff7928a6209904471b21\\\"\",\"cross-origin-resource-policy\":\"cross-origin\",\"accept-ranges\":\"bytes\",\"x-jsr-cache-id\":\"PAR-31976c84\",\"x-robots-tag\":\"noindex\",\"access-control-expose-headers\":\"*\",\"x-goog-hash\":\"crc32c=4C8Z9w==,md5=8j1C7xKY/3kopiCZBEcbIQ==\",\"expires\":\"Tue, 30 Dec 2025 14:38:35 GMT\",\"x-content-type-options\":\"nosniff\"},\"url\":\"https://jsr.io/@std/encoding/1.0.6/hex.ts\",\"time\":1735569515}", "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright 2020 Keith Cirkel. All rights reserved. MIT license.\n// Copyright 2023 Skye \"MierenManz\". All rights reserved. MIT license.\n/**\n * Utilities for {@link https://protobuf.dev/programming-guides/encoding/#varints Varint} encoding\n * of typed integers. Varint encoding represents integers using a variable number of bytes, with\n * smaller values requiring fewer bytes.\n *\n * ```ts\n * import { encodeVarint, decodeVarint } from \"@std/encoding/varint\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const buf = new Uint8Array(10);\n * assertEquals(\n *   encodeVarint(42n, buf),\n *   [new Uint8Array([42]), 1]\n * );\n *\n * assertEquals(\n *   decodeVarint(new Uint8Array([42])),\n *   [ 42n, 1 ]\n * );\n * ```\n *\n * @module\n */\n\n// This implementation is a port of https://deno.land/x/varint@v2.0.0 by @keithamus\n// This module is browser compatible.\n\n/**\n * The maximum value of an unsigned 64-bit integer.\n * Equivalent to `2n**64n - 1n`\n */\nexport const MaxUint64 = 18446744073709551615n;\n\n/**\n * The maximum length, in bytes, of a Varint encoded 64-bit integer.\n */\nexport const MaxVarintLen64 = 10;\n/**\n * The maximum length, in bytes, of a Varint encoded 32-bit integer.\n */\nexport const MaxVarintLen32 = 5;\n\nconst MSB = 0x80;\nconst REST = 0x7f;\nconst SHIFT = 7;\nconst MSBN = 0x80n;\nconst SHIFTN = 7n;\n\n// ArrayBuffer and TypedArray's for \"pointer casting\"\nconst AB = new ArrayBuffer(8);\nconst U32_VIEW = new Uint32Array(AB);\nconst U64_VIEW = new BigUint64Array(AB);\n\n/**\n * Given a non empty `buf`, starting at `offset` (default: 0), begin decoding bytes as\n * Varint encoded bytes, for a maximum of 10 bytes (offset + 10). The returned\n * tuple is of the decoded varint 32-bit number, and the new offset with which\n * to continue decoding other data.\n *\n * If a `bigint` in return is undesired, the `decode32` function will return a\n * `number`, but this should only be used in cases where the varint is\n * _assured_ to be 32-bits. If in doubt, use `decode()`.\n *\n * To know how many bytes the Varint took to encode, simply negate `offset`\n * from the returned new `offset`.\n *\n * @param buf The buffer to decode from.\n * @param offset The offset to start decoding from.\n * @returns A tuple of the decoded varint 64-bit number, and the new offset.\n *\n * @example Usage\n * ```ts\n * import { decodeVarint } from \"@std/encoding/varint\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const buf = new Uint8Array([0x8E, 0x02]);\n * assertEquals(decodeVarint(buf), [270n, 2]);\n * ```\n */\nexport function decodeVarint(buf: Uint8Array, offset = 0): [bigint, number] {\n  // Clear the last result from the Two's complement view\n  U64_VIEW[0] = 0n;\n\n  // Setup the initiat state of the function\n  let intermediate = 0;\n  let position = 0;\n  let i = offset;\n\n  // If the buffer is empty Throw\n  if (buf.length === 0) throw new RangeError(\"Cannot read empty buffer\");\n\n  let byte;\n  do {\n    // Get a single byte from the buffer\n    byte = buf[i]!;\n\n    // 1. Take the lower 7 bits of the byte.\n    // 2. Shift the bits into the correct position.\n    // 3. Bitwise OR it with the intermediate value\n    // QUIRK: in the 5th (and 10th) iteration of this loop it will overflow on the shift.\n    // This causes only the lower 4 bits to be shifted into place and removing the upper 3 bits\n    intermediate |= (byte & 0b01111111) << position;\n\n    // If position is 28\n    // it means that this iteration needs to be written the the two's complement view\n    // This only happens once due to the `-4` in this branch\n    if (position === 28) {\n      // Write to the view\n      U32_VIEW[0] = intermediate;\n      // set `intermediate` to the remaining 3 bits\n      // We only want the remaining three bits because the other 4 have been \"consumed\" on line 21\n      intermediate = (byte & 0b01110000) >>> 4;\n      // set `position` to -4 because later 7 will be added, making it 3\n      position = -4;\n    }\n\n    // Increment the shift position by 7\n    position += 7;\n    // Increment the iterator by 1\n    i++;\n    // Keep going while there is a continuation bit\n  } while ((byte & 0b10000000) === 0b10000000);\n  // subtract the initial offset from `i` to get the bytes read\n  const nRead = i - offset;\n\n  // If 10 bytes have been read and intermediate has overflown\n  // it means that the varint is malformed\n  // If 11 bytes have been read it means that the varint is malformed\n  // If `i` is bigger than the buffer it means we overread the buffer and the varint is malformed\n  if ((nRead === 10 && intermediate > -1) || nRead === 11 || i > buf.length) {\n    throw new RangeError(\n      \"Cannot decode the varint input: Malformed or overflow varint\",\n    );\n  }\n\n  // Write the intermediate value to the \"empty\" slot\n  // if the first slot is taken. Take the second slot\n  U32_VIEW[Number(nRead > 4)] = intermediate;\n\n  return [U64_VIEW[0], i];\n}\n\n/**\n * Given a `buf`, starting at `offset` (default: 0), begin decoding bytes as\n * Varint encoded bytes, for a maximum of 5 bytes (offset + 5). The returned\n * tuple is of the decoded varint 32-bit number, and the new offset with which\n * to continue decoding other data.\n *\n * Varints are _not 32-bit by default_ so this should only be used in cases\n * where the varint is _assured_ to be 32-bits. If in doubt, use `decode()`.\n *\n * To know how many bytes the Varint took to encode, simply negate `offset`\n * from the returned new `offset`.\n *\n * @param buf The buffer to decode from.\n * @param offset The offset to start decoding from.\n * @returns A tuple of the decoded varint 32-bit number, and the new offset.\n *\n * @example Usage\n * ```ts\n * import { decodeVarint32 } from \"@std/encoding/varint\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const buf = new Uint8Array([0x8E, 0x02]);\n * assertEquals(decodeVarint32(buf), [270, 2]);\n * ```\n */\nexport function decodeVarint32(buf: Uint8Array, offset = 0): [number, number] {\n  let shift = 0;\n  let decoded = 0;\n  for (\n    let i = offset;\n    i <= Math.min(buf.length, offset + MaxVarintLen32);\n    i += 1, shift += SHIFT\n  ) {\n    const byte = buf[i]!;\n    decoded += (byte & REST) * Math.pow(2, shift);\n    if (!(byte & MSB)) return [decoded, i + 1];\n  }\n  throw new RangeError(\n    \"Cannot decode the varint input: Malformed or overflow varint\",\n  );\n}\n\n/**\n * Takes unsigned number `num` and converts it into a Varint encoded\n * `Uint8Array`, returning a tuple consisting of a `Uint8Array` slice of the\n * encoded Varint, and an offset where the Varint encoded bytes end within the\n * `Uint8Array`.\n *\n * If `buf` is not given then a Uint8Array will be created.\n * `offset` defaults to `0`.\n *\n * If passed `buf` then that will be written into, starting at `offset`. The\n * resulting returned `Uint8Array` will be a slice of `buf`. The resulting\n * returned number is effectively `offset + bytesWritten`.\n *\n * @param num The number to encode.\n * @param buf The buffer to write into.\n * @param offset The offset to start writing at.\n * @returns A tuple of the encoded Varint `Uint8Array` and the new offset.\n *\n * @example Usage\n * ```ts\n * import { encodeVarint } from \"@std/encoding/varint\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const buf = new Uint8Array(10);\n * assertEquals(encodeVarint(42n, buf), [new Uint8Array([42]), 1]);\n * ```\n */\nexport function encodeVarint(\n  num: bigint | number,\n  buf: Uint8Array = new Uint8Array(MaxVarintLen64),\n  offset = 0,\n): [Uint8Array, number] {\n  num = BigInt(num);\n  if (num < 0n) {\n    throw new RangeError(\n      `Cannot encode the input into varint as it should be non-negative integer: received ${num}`,\n    );\n  }\n  for (\n    let i = offset;\n    i <= Math.min(buf.length, MaxVarintLen64);\n    i += 1\n  ) {\n    if (num < MSBN) {\n      buf[i] = Number(num);\n      i += 1;\n      return [buf.slice(offset, i), i];\n    }\n    buf[i] = Number((num & 0xFFn) | MSBN);\n    num >>= SHIFTN;\n  }\n  throw new RangeError(\n    `Cannot encode the input ${num} into varint as it overflows uint64`,\n  );\n}\n\n// denoCacheMetadata={\"headers\":{\"x-jsr-cache-id\":\"PAR-31976c84\",\"content-type\":\"text/typescript\",\"date\":\"Mon, 30 Dec 2024 14:38:35 GMT\",\"expires\":\"Tue, 30 Dec 2025 14:38:35 GMT\",\"x-goog-metageneration\":\"1\",\"x-goog-stored-content-length\":\"8044\",\"last-modified\":\"Wed, 18 Dec 2024 07:16:29 GMT\",\"cache-control\":\"public, max-age=31536000, immutable\",\"x-goog-hash\":\"crc32c=zU+HEQ==,md5=Pj0IuKdl8kY+3GWaz7s8yQ==\",\"access-control-expose-headers\":\"*\",\"cross-origin-resource-policy\":\"cross-origin\",\"x-content-type-options\":\"nosniff\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-jsr-cache-status\":\"miss\",\"x-goog-storage-class\":\"STANDARD\",\"x-guploader-uploadid\":\"AFiumC7q3GiGJ0PTVI41PP_7_PXheomdPbIVMDImZBxh2lkRAZeTg-HE5OONw4H70ipc51bhiuTBKSY\",\"x-robots-tag\":\"noindex\",\"via\":\"1.1 google\",\"access-control-allow-origin\":\"*\",\"accept-ranges\":\"bytes\",\"server\":\"UploadServer\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-stored-content-encoding\":\"identity\",\"etag\":\"\\\"3e3d08b8a765f2463edc659acfbb3cc9\\\"\",\"x-goog-generation\":\"1734506189339148\",\"content-length\":\"8044\"},\"url\":\"https://jsr.io/@std/encoding/1.0.6/varint.ts\",\"time\":1735569515}", "import {\n  asset,\n  clientStore,\n  editor,\n  system,\n} from \"@silverbulletmd/silverbullet/syscalls\";\nimport { encodeBase64 } from \"@std/encoding\";\n\nexport async function updateMindMapPreview() {\n  if (!(await clientStore.get(\"enableMindMapPreview\"))) {\n    return;\n  }\n  const content = await editor.getText();\n  const contentBase64 = encodeBase64(content);\n\n  const css = await asset.readAsset(\"markdown\", \"assets/preview.css\");\n  const js = await asset.readAsset(\"markdown\", \"assets/preview.js\");\n\n  const mindmapJS = `\nloadJsByUrl(\"https://cdn.jsdelivr.net/npm/markmap-lib\", \"sha256-ulWyGiHbVRTYcTWQHIHT/r9sLSbO/4M6ZwoGj08JKcE=\").then(() => {\n\n  const { Transformer } = window.markmap;\n  const transformer = new Transformer();\n  const { root } = transformer.transform(atob(\"${contentBase64}\"));\n  loadJsByUrl(\"https://cdn.jsdelivr.net/npm/d3@7.9.0/dist/d3.min.js\", \"sha256-8glLv2FBs1lyLE/kVOtsSw8OQswQzHr5IfwVj864ZTk=\").then(() => {\n    loadJsByUrl(\"https://cdn.jsdelivr.net/npm/markmap-view@0.18.4/dist/browser/index.js\", \"sha256-t0E4SeDTbZw4QNtQ/RqxPvK+wvw4oSYO1k4x0I1RKAE=\").then(() => {\n      ((getMarkmap, getOptions, root22, jsonOptions) => {\n        const markmap = getMarkmap();\n        window.mm = markmap.Markmap.create(\n          \"svg#mindmap\",\n          (getOptions || markmap.deriveOptions)(jsonOptions),\n          root22\n        );\n      })(() => window.markmap, null, root, null)\n    });\n  });\n});\n  `\n\n  const customStyles = await editor.getUiOption(\"customStyles\");\n  const toolbar = renderToolbar();\n  await editor.showPanel(\n    \"rhs\",\n    2,\n    `\n      <link rel=\"stylesheet\" href=\"/.client/main.css\" />\n      <style>\n        ${css}\n        ${customStyles ?? \"\"}\n        * {\n          margin: 0;\n          padding: 0;\n        }\n        #mindmap {\n          display: block;\n          width: 100vw;\n          height: 100vh;\n        }\n      </style>\n      <div id=\"root\" class=\"sb-preview\">${toolbar}<svg id=\"mindmap\"></svg></div>\n    `,\n    js + mindmapJS,\n  );\n}\n\nfunction renderToolbar(): string {\n  return `<div class=\"sb-mindmap-toolbar\">\n            <button onClick=\"window.print()\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                  viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\n                  stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                  class=\"feather feather-printer\">\n                <polyline points=\"6 9 6 2 18 2 18 9\"/>\n                <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"/>\n                <rect x=\"6\" y=\"14\" width=\"12\" height=\"8\"/>\n              </svg>\n            </button>\n          </div>`;\n}\n\nexport async function previewClickHandler(e: any) {\n  const [eventName, arg] = JSON.parse(e);\n  // console.log(\"Got click\", eventName, arg);\n  switch (eventName) {\n    case \"pos\":\n      // console.log(\"Moving cursor to\", +arg);\n      await editor.moveCursor(+arg, true);\n      break;\n    case \"command\":\n      await system.invokeCommand(arg);\n      break;\n  }\n}\n", "import { clientStore, editor } from \"@silverbulletmd/silverbullet/syscalls\";\nimport { updateMindMapPreview } from \"./preview.ts\";\n\nexport async function togglePreview() {\n  const currentValue = !!(await clientStore.get(\"enableMindMapPreview\"));\n  await clientStore.set(\"enableMindMapPreview\", !currentValue);\n  if (!currentValue) {\n    await updateMindMapPreview();\n  } else {\n    // Hide  preview\n    await editor.hidePanel(\"rhs\");\n  }\n}\n", "\nimport { setupMessageListener } from \"https://deno.land/x/silverbullet@0.10.1/lib/plugos/worker_runtime.ts\";\n\n// Imports\nimport {togglePreview as toggle} from \"file:///home/live/git/silverbullet-mindmap/mindmap.ts\";\nimport {updateMindMapPreview as preview} from \"file:///home/live/git/silverbullet-mindmap/preview.ts\";\nimport {previewClickHandler as previewClickHandler} from \"file:///home/live/git/silverbullet-mindmap/preview.ts\";\n\n\n// Function mapping\nconst functionMapping = {\n  toggle: toggle,\n  preview: preview,\n  previewClickHandler: previewClickHandler,\n\n};\n\n// Manifest\nconst manifest = {\n  \"name\": \"mindmap\",\n  \"assets\": {\n    \"assets/preview.js\": {\n      \"data\": \"data:application/javascript;base64,ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJvb3QiKS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIChlKSA9PiB7CiAgLy8gY29uc29sZS5sb2coIkdvdCBjbGljayIsIGUudGFyZ2V0KQogIGNvbnN0IGRhdGFTZXQgPSBlLnRhcmdldC5kYXRhc2V0OwogIGlmIChkYXRhU2V0WyJvbmNsaWNrIl0pIHsKICAgIHN5c2NhbGwoImV2ZW50LmRpc3BhdGNoIiwgInByZXZpZXc6Y2xpY2siLCBkYXRhU2V0WyJvbmNsaWNrIl0pLmNhdGNoKChlKSA9PgogICAgICBjb25zb2xlLmxvZygiRXJyb3IiLCBlKQogICAgKTsKICB9IGVsc2UgaWYgKGRhdGFTZXRbInBvcyJdKSB7CiAgICBzeXNjYWxsKAogICAgICAiZXZlbnQuZGlzcGF0Y2giLAogICAgICAicHJldmlldzpjbGljayIsCiAgICAgIEpTT04uc3RyaW5naWZ5KFsicG9zIiwgZGF0YVNldFsicG9zIl1dKSwKICAgICkuY2F0Y2goKGUpID0+IGNvbnNvbGUubG9nKCJFcnJvciIsIGUpKTsKICB9Cn0pOwo=\",\n      \"mtime\": 1735569621753\n    },\n    \"assets/preview.css\": {\n      \"data\": \"data:text/css;base64,aHRtbCwKaHRtbCB7CiAgb3ZlcmZsb3cteTogc2Nyb2xsICFpbXBvcnRhbnQ7CiAgd2lkdGg6IDkwJSAhaW1wb3J0YW50Owp9Cgpib2R5IHsKICBvdmVyZmxvdzogaW5pdGlhbCAhaW1wb3J0YW50OwogIGNvbG9yOiB2YXIoLS10b3AtY29sb3IpOwogIGZvbnQtZmFtaWx5OiBnZW9yZ2lhLCB0aW1lcywgc2VyaWY7CiAgZm9udC1zaXplOiAxNHB0OwogIG1heC13aWR0aDogODAwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IHJldmVydDsKICBtYXJnaW4tYm90dG9tOiByZXZlcnQ7CiAgcGFkZGluZy1sZWZ0OiAyMHB4OwogIHBhZGRpbmctcmlnaHQ6IDIwcHg7Cn0KCmltZyB7CiAgbWF4LXdpZHRoOiAxMDAlOwp9Cgp0YWJsZSB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXNwYWNpbmc6IDA7Cn0KCnVsIGxpIHAgewogIG1hcmdpbjogMDsKfQoKdGhlYWQgdHIgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWVkaXRvci10YWJsZS1oZWFkLWJhY2tncm91bmQtY29sb3IpOwogIGNvbG9yOiB2YXIoLS1lZGl0b3ItdGFibGUtaGVhZC1jb2xvcik7Cn0KCnRoLAp0ZCB7CiAgcGFkZGluZzogOHB4Owp9Cgp0Ym9keSB0cjpudGgtb2YtdHlwZShldmVuKSB7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZWRpdG9yLXRhYmxlLWV2ZW4tYmFja2dyb3VuZC1jb2xvcik7Cn0KCmFbaHJlZl0gewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBjb2xvcjogdmFyKC0tbGluay1jb2xvcik7Cn0KCmJsb2NrcXVvdGUgewogIGJvcmRlci1sZWZ0OiAxcHggc29saWQgdmFyKC0tZWRpdG9yLWJsb2NrcXVvdGUtYm9yZGVyLWNvbG9yKTsKICBtYXJnaW4tbGVmdDogMnB4OwogIHBhZGRpbmctbGVmdDogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1lZGl0b3ItYmxvY2txdW90ZS1iYWNrZ3JvdW5kLWNvbG9yKTsKICBjb2xvcjogdmFyKC0tZWRpdG9yLWJsb2NrcXVvdGUtY29sb3IpOwp9CgpociB7CiAgbWFyZ2luOiAxZW0gMCAxZW0gMDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1lZGl0b3ItcnVsZXItY29sb3IpOwogIGJvcmRlci13aWR0aDogMDsKICBib3JkZXItc3R5bGU6IGRvdHRlZDsKfQoKaHI6YWZ0ZXIgewogIGNvbnRlbnQ6ICLCt8K3wrciOwogIGxldHRlci1zcGFjaW5nOiAxZW07Cn0KCnNwYW4uaGlnaGxpZ2h0IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oaWdobGlnaHQtY29sb3IpOwp9Cg==\",\n      \"mtime\": 1735569621754\n    }\n  },\n  \"functions\": {\n    \"toggle\": {\n      \"path\": \"./mindmap.ts:togglePreview\",\n      \"command\": {\n        \"name\": \"Mindmap Preview: Toggle\",\n        \"key\": \"Ctrl-m\",\n        \"mac\": \"Cmd-m\"\n      }\n    },\n    \"preview\": {\n      \"path\": \"./preview.ts:updateMindMapPreview\",\n      \"events\": [\n        \"plug:load\",\n        \"editor:updated\",\n        \"editor:pageLoaded\",\n        \"editor:pageReloaded\"\n      ]\n    },\n    \"previewClickHandler\": {\n      \"path\": \"./preview.ts:previewClickHandler\",\n      \"events\": [\n        \"preview:click\"\n      ]\n    }\n  }\n};\n\nexport const plug = {manifest, functionMapping};\n\nsetupMessageListener(functionMapping, manifest, self.postMessage);\n"],
  "mappings": "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",
  "names": ["functionMapping", "manifest", "lookup", "syscall", "syscall", "newWindow", "syscall", "syscall", "base64Decode", "base64Decode", "syscall"]
}
